/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BrainTrustFeeConverterContract,
  BrainTrustFeeConverterContractInterface,
} from "../BrainTrustFeeConverterContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_btrst",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_poolFee",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BTRST",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b5060405161087238038061087283398101604081905261003091610071565b606094851b6001600160601b031990811660e05293851b841660805291841b831660a05290921b1660c05260e81b6001600160e81b03191661010052610104565b600080600080600060a08688031215610088578081fd5b8551610093816100ec565b60208701519095506100a4816100ec565b60408701519094506100b5816100ec565b60608701519093506100c6816100ec565b608087015190925062ffffff811681146100de578182fd5b809150509295509295909350565b6001600160a01b038116811461010157600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6106e661018c60003960008181606c0152610263015260008181610139015281816101d0015261035201526000818160eb015261023401526000818161011201528181610183015281816101af015261020501526000818160ac015261028e01526106e66000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063089fe6aa146100675780635b5c251f146100a757806386ed23e2146100e657806389a302711461010d578063c31c9c0714610134578063f16b68f71461015b575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b60405162ffffff90911681526020015b60405180910390f35b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161009e565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b61016e610169366004610628565b61017c565b60405190815260200161009e565b60006101aa7f00000000000000000000000000000000000000000000000000000000000000003330876103da565b6101f57f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000866104e9565b60006040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000062ffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200184426102c7919061068c565b8152602080820188905260408083018890526000606093840152805163414bf38960e01b815284516001600160a01b03908116600483015292850151831660248201529084015162ffffff16604482015291830151811660648301526080830151608483015260a083015160a483015260c083015160c483015260e0830151811660e48301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063414bf3899061010401602060405180830381600087803b15801561039957600080fd5b505af11580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610610565b95945050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161043e9190610653565b6000604051808303816000865af19150503d806000811461047b576040519150601f19603f3d011682016040523d82523d6000602084013e610480565b606091505b50915091508180156104aa5750805115806104aa5750808060200190518101906104aa91906105e9565b6104e15760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916105459190610653565b6000604051808303816000865af19150503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b50915091508180156105b15750805115806105b15750808060200190518101906105b191906105e9565b6105e25760405162461bcd60e51b8152602060048201526002602482015261534160f01b60448201526064016104d8565b5050505050565b6000602082840312156105fa578081fd5b81518015158114610609578182fd5b9392505050565b600060208284031215610621578081fd5b5051919050565b60008060006060848603121561063c578182fd5b505081359360208301359350604090920135919050565b60008251815b818110156106735760208186018101518583015201610659565b818111156106815782828501525b509190910192915050565b600082198211156106ab57634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220b1f1eb9c038441d5348f604a08c9cb343c5f52cccdb28a4b4c90d4a4306e279264736f6c63430008040033";

type BrainTrustFeeConverterContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainTrustFeeConverterContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrainTrustFeeConverterContract__factory extends ContractFactory {
  constructor(...args: BrainTrustFeeConverterContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _swapRouter: string,
    _treasuryAddress: string,
    _usdc: string,
    _btrst: string,
    _poolFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BrainTrustFeeConverterContract> {
    return super.deploy(
      _swapRouter,
      _treasuryAddress,
      _usdc,
      _btrst,
      _poolFee,
      overrides || {}
    ) as Promise<BrainTrustFeeConverterContract>;
  }
  getDeployTransaction(
    _swapRouter: string,
    _treasuryAddress: string,
    _usdc: string,
    _btrst: string,
    _poolFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapRouter,
      _treasuryAddress,
      _usdc,
      _btrst,
      _poolFee,
      overrides || {}
    );
  }
  attach(address: string): BrainTrustFeeConverterContract {
    return super.attach(address) as BrainTrustFeeConverterContract;
  }
  connect(signer: Signer): BrainTrustFeeConverterContract__factory {
    return super.connect(signer) as BrainTrustFeeConverterContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainTrustFeeConverterContractInterface {
    return new utils.Interface(_abi) as BrainTrustFeeConverterContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrainTrustFeeConverterContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BrainTrustFeeConverterContract;
  }
}
